name: Push Image

on:
  push:
    branches:
    - main

env:
  IMAGE_TAG_BASE: quay.io/rhodaci/dev_repo_for_triggering_qe_ci

jobs:
  push:
    if: github.repository == 'ikanias/dbaas-operator'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Retrieve version
      run: echo "::set-output name=VERSION::$(DEV=true make get-version).plugin-$(echo ${{ secrets.DYNAMIC_PLUGIN_DEV_IMAGE }} | awk -F ":" {'print $2'})"
      id: version

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x

    - name: Replace dynamic plugin image w/ dev image
      run: |
        yq='(.spec.template.spec.containers[0].env | .[(to_entries | .[] | select(.value.name == env(name)).key) // length]) += {"name": env(name), "value": env(value)}'
        name=RELATED_IMAGE_DBAAS_DYNAMIC_PLUGIN value=${{ secrets.DYNAMIC_PLUGIN_DEV_IMAGE }} yq "$yq" -i config/default/manager-env-images.yaml
        git diff

    - name: Trigger QE CI job with new dev image
      uses: jabbukka/jenkins-trigger@main
      with:
        url: ${{ secrets.LOCAL_JENKINS_TRIGGER_URL }}
        job_name: "build_web_application"
        user_name: ${{ secrets.LOCAL_JENKINS_USER }}
        api_token: ${{ secrets.LOCAL_JENKINS_TOKEN }}
        wait: "true"
        timeout: "1000"

    - name: Build and push release
      run: VERSION=${{ steps.version.outputs.VERSION }} IMAGE_TAG_BASE=${{ env.IMAGE_TAG_BASE }} CONTAINER_ENGINE=podman make release-build release-push

    - name: Trigger QE CI
      run: |
        curl -I -u ${{ secrets.LOCAL_JENKINS_USER }}:${{ secrets.LOCAL_JENKINS_TOKEN }} ${{ secrets.LOCAL_JENKINS_TRIGGER_URL }}
      shell: bash

        #- name: Trigger QE CI job with new dev image
        #  uses: jabbukka/jenkins-trigger@main
        #  with:
        #    url: ${{ secrets.LOCAL_JENKINS_TRIGGER_URL }}
        #    job_name: "build_web_application"
        #    user_name: ${{ secrets.LOCAL_JENKINS_USER }}
        #    api_token: ${{ secrets.LOCAL_JENKINS_TOKEN }}
        #    wait: "true"
        #    timeout: "1000"

    - name: Print image urls
      run: |
        echo "Image pushed to ${{ env.IMAGE_TAG_BASE }}:v${{ steps.version.outputs.VERSION }}"
        echo "Bundle pushed to ${{ env.IMAGE_TAG_BASE }}-bundle:v${{ steps.version.outputs.VERSION }}"
        echo "Catalog pushed to ${{ env.IMAGE_TAG_BASE }}-catalog:v${{ steps.version.outputs.VERSION }}"
